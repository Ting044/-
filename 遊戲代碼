<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>獸醫大學牲最後的掙扎 - UI版</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;500;700;900&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Noto Sans TC', sans-serif;
            touch-action: manipulation;
            background-color: #f1f5f9; /* slate-100 */
            background-image: url('https://www.transparenttextures.com/patterns/subtle-white-feathers.png');
        }
        .game-title {
            text-shadow: 2px 2px 0px #d1d5db, 4px 4px 0px rgba(0,0,0,0.1);
        }
        .status-bar-fill {
            transition: width 0.5s ease-in-out;
        }
        .action-button {
            transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.06);
        }
        .action-button:hover {
            transform: translateY(-4px) scale(1.03);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);
        }
        .action-button:active {
            transform: translateY(-1px) scale(1);
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px) scale(0.95); }
            to { opacity: 1; transform: translateY(0) scale(1); }
        }
        @keyframes fadeOut {
            from { opacity: 1; transform: translateY(0) scale(1); }
            to { opacity: 0; transform: translateY(20px) scale(0.95); }
        }
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(107, 114, 128, 0.75); /* gray-500 */
            backdrop-filter: blur(8px);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 50;
        }
        .modal-content {
            animation: fadeIn 0.3s ease-out forwards;
        }
        .modal-content.closing {
            animation: fadeOut 0.3s ease-in forwards;
        }

        @keyframes tada {
            0% {transform: scale(1);} 10%, 20% {transform: scale(0.9) rotate(-5deg);} 30%, 50%, 70%, 90% {transform: scale(1.2) rotate(5deg);} 40%, 60%, 80% {transform: scale(1.2) rotate(-5deg);} 100% {transform: scale(1) rotate(0);}
        }
        .tada-animation {
            animation: tada 1s ease-in-out;
        }
    </style>
</head>
<body class="flex items-center justify-center min-h-screen p-2 sm:p-4 text-gray-800">

    <div id="game-container" class="w-full max-w-4xl mx-auto bg-white/80 backdrop-blur-lg border border-gray-200 rounded-2xl shadow-2xl p-4 sm:p-6 md:p-8 space-y-4 md:space-y-6">
        
        <header class="text-center">
            <h1 class="text-2xl sm:text-3xl md:text-4xl font-black game-title text-indigo-600">獸醫大學牲最後的掙扎</h1>
            <p id="day-display" class="text-base sm:text-lg text-gray-600 mt-2">倒數第 14 天 (星期一)</p>
        </header>

        <!-- *** 已修改 ***: 加入 md: tiền tố để實現響應式佈局 -->
        <main class="grid grid-cols-1 md:grid-cols-5 gap-4 md:gap-6">
            
            <div class="md:col-span-2 flex flex-col items-center justify-center bg-slate-200/60 p-4 rounded-lg space-y-4">
                <div>
                    <span class="block text-sm font-bold text-emerald-600 mb-1">精神值</span>
                    <div class="status-bar w-full max-w-xs mx-auto bg-gray-300 rounded-full h-4">
                        <div id="stamina-bar" class="status-bar-fill bg-emerald-500 h-4 rounded-full" style="width: 100%;"></div>
                    </div>
                     <p id="stamina-text" class="text-center text-xs mt-1 text-gray-500">100 / 120</p>
                </div>
                <div>
                    <span class="block text-sm font-bold text-sky-600 mb-1">金錢</span>
                     <div class="status-bar w-full max-w-xs mx-auto bg-gray-300 rounded-full h-4">
                        <div id="money-bar" class="status-bar-fill bg-sky-500 h-4 rounded-full" style="width: 75%;"></div>
                    </div>
                    <p id="money-text" class="text-center text-xs mt-1 text-gray-500">$1500</p>
                </div>
            </div>

            <div class="md:col-span-3 bg-slate-200/60 p-4 rounded-lg">
                <h2 class="text-lg font-bold mb-2 border-b border-gray-300 pb-2">學業進度</h2>
                <div id="grades-panel" class="space-y-2 text-sm">
                </div>
            </div>

        </main>

        <footer id="action-panel" class="pt-4 border-t border-gray-300">
        </footer>

    </div>

    <div id="modal-template" class="modal-overlay hidden">
        <div class="modal-content w-11/12 max-w-lg bg-white border border-gray-300 rounded-2xl shadow-lg p-6 sm:p-8 space-y-4 text-center">
            <h3 id="modal-title" class="text-xl sm:text-2xl font-bold text-indigo-600"></h3>
            <p id="modal-text" class="text-gray-700 text-sm sm:text-base"></p>
            <div id="modal-stats" class="text-sm sm:text-base"></div>
            <div id="modal-choices" class="grid grid-cols-1 gap-3 sm:gap-4 pt-4"></div>
        </div>
    </div>


    <script>
        // ==================================
        // 1. 遊戲狀態初始化
        // ==================================
        let gameState = {};

        function initializeGameState() {
            const initialGrades = {
                '保育醫學概論': 42,
                '有機化學': 30,
                '細胞生物學': 35,
                '獸醫細菌學': 33,
                '獸醫解剖學(2)': 28,
            };

            gameState = {
                day: 1,
                stamina: 100,
                maxStamina: 120,
                money: 1500,
                grades: { ...initialGrades },
                kp: Object.keys(initialGrades).reduce((acc, key) => ({ ...acc, [key]: 0 }), {}),
                history: [],
                isGameOver: false,
                isWaitingForEventChoice: false,
            };
        }

        // ==================================
        // 2. DOM 元素獲取
        // ==================================
        const dayDisplay = document.getElementById('day-display');
        const staminaDisplay = document.getElementById('stamina-bar');
        const staminaText = document.getElementById('stamina-text');
        const moneyDisplay = document.getElementById('money-bar');
        const moneyText = document.getElementById('money-text');
        const gradesPanel = document.getElementById('grades-panel');
        const actionPanel = document.getElementById('action-panel');
        const modal = document.getElementById('modal-template');
        const modalTitle = document.getElementById('modal-title');
        const modalText = document.getElementById('modal-text');
        const modalStats = document.getElementById('modal-stats');
        const modalChoices = document.getElementById('modal-choices');


        // ==================================
        // 3. 畫面更新函式
        // ==================================
        function updateDisplay() {
            if (gameState.isGameOver) return;
            
            const dayName = ['一', '二', '三', '四', '五', '六', '日', '一', '二', '三', '四', '五', '六', '日'][(gameState.day - 1)];
            dayDisplay.textContent = `倒數第 ${15 - gameState.day} 天 (星期${dayName})`;
            
            const staminaPercentage = Math.max(0, (gameState.stamina / gameState.maxStamina) * 100);
            staminaDisplay.style.width = `${staminaPercentage}%`;
            staminaText.textContent = `${gameState.stamina} / ${gameState.maxStamina}`;
            staminaDisplay.classList.toggle('bg-red-500', staminaPercentage < 30);
            staminaDisplay.classList.toggle('bg-emerald-500', staminaPercentage >= 30);
            
            const moneyPercentage = Math.min(100, (gameState.money / 5000) * 100);
            moneyDisplay.style.width = `${moneyPercentage}%`;
            moneyText.textContent = `$${gameState.money}`;
            
            gradesPanel.innerHTML = '';
            for (const subject in gameState.grades) {
                const grade = gameState.grades[subject];
                const kp = gameState.kp[subject];
                const estimatedGrade = Math.min(100, grade + Math.floor(kp / 1.0)); 
                
                const gradeElement = document.createElement('div');
                gradeElement.className = `p-2 rounded ${estimatedGrade < 60 ? 'bg-red-200' : 'bg-emerald-200'}`;
                gradeElement.innerHTML = `
                    <div class="flex justify-between items-center">
                        <span class="font-bold text-gray-700">${subject}</span>
                        <span class="font-bold ${estimatedGrade < 60 ? 'text-red-600' : 'text-emerald-700'}">${estimatedGrade}分</span>
                    </div>
                    <div class="text-xs text-gray-500">知識點(KP): ${kp}</div>
                `;
                gradesPanel.appendChild(gradeElement);
            }
        }

        // ==================================
        // 4. 遊戲邏輯核心 (彈窗系統整合)
        // ==================================
        function showModal({ title, text, stats, choices }) {
            modalTitle.textContent = title;
            modalText.innerHTML = text; 

            modalStats.innerHTML = '';
            if (stats) {
                let parts = [];
                if (stats.stamina) parts.push(`<span class="${stats.stamina > 0 ? 'text-emerald-600' : 'text-red-600'}">精神值 ${stats.stamina > 0 ? '+' : ''}${stats.stamina}</span>`);
                if (stats.money) parts.push(`<span class="${stats.money > 0 ? 'text-sky-600' : 'text-red-600'}">金錢 ${stats.money > 0 ? '+' : ''}${stats.money}</span>`);
                if (stats.kp) {
                    for(const sub in stats.kp) parts.push(`<span class="text-amber-600">${sub} KP ${stats.kp[sub] > 0 ? '+' : ''}${stats.kp[sub]}</span>`);
                }
                modalStats.innerHTML = parts.join(', ');
            }

            modalChoices.innerHTML = '';
            if (choices) {
                choices.forEach(choice => {
                    const button = document.createElement('button');
                    button.className = `action-button p-3 rounded-lg text-white font-bold ${choice.style || 'bg-gray-500'}`;
                    button.textContent = choice.text;
                    button.onclick = () => {
                        modal.classList.add('closing');
                        setTimeout(() => {
                           modal.classList.add('hidden');
                           modal.classList.remove('closing');
                           choice.action();
                        }, 300);
                    };
                    modalChoices.appendChild(button);
                });
            }
            
            modal.classList.remove('hidden');
        }

        function processDay() {
            if (gameState.isGameOver) return;
            promptDailyAction();
        }
        
        function promptDailyAction() {
            // *** 已修改 ***: 按鈕佈局響應式調整
            actionPanel.innerHTML = `
                <div class="grid grid-cols-1 sm:grid-cols-3 gap-3 md:gap-4">
                    <button data-action="study" class="action-button bg-emerald-500 text-white p-3 md:p-4 rounded-lg font-bold">讀書...吧？</button>
                    <button data-action="work" class="action-button bg-amber-500 text-white p-3 md:p-4 rounded-lg font-bold">打工賣肝</button>
                    <button data-action="rest" class="action-button bg-sky-500 text-white p-3 md:p-4 rounded-lg font-bold">戰略性放棄</button>
                </div>
            `;
        }
        
        function handleAction(action) {
            if (gameState.isWaitingForEventChoice) return;
            switch(action) {
                case 'study': promptStudySubject(); break;
                case 'work': performWork(); break;
                case 'rest': performRest(); break;
                default:
                    if (action.startsWith('study-')) {
                        const subject = action.replace('study-', '');
                        performStudy(subject);
                    }
            }
        }
        
        function promptStudySubject() {
            let choices = [];
            for (const subject in gameState.grades) {
                choices.push({
                    text: subject,
                    style: 'bg-emerald-600',
                    action: () => performStudy(subject)
                });
            }
            showModal({
                title: '要擠哪一科？',
                text: '時間是OO，擠一擠就有了。',
                choices: choices
            });
        }
        
        function performStudy(subject) {
            let messages = [];
            let changes = { stamina: -20, kp: { [subject]: 30 } }; 
            
            switch(subject) {
                case '獸醫解剖學(2)':
                    messages = ["你走進 VMII111，福馬林的氣味讓你瞬間醒腦...", "你翻開Netter解剖圖譜，那些肌肉纖維圖在你眼裡變成了一塊塊鮮美的牛肉...", "你試圖記住犬的腕骨有幾塊，結果滿腦子都是牠們可愛的肉球..."];
                    changes = { stamina: -25, kp: { [subject]: 35 } };
                    break;
                case '有機化學':
                    messages = ["你盯著沈國屏老師畫的苯環，盯到感覺那些六角形開始在你眼前跳舞...", "SN1、SN2、E1、E2...這些鬼東西在你腦中打成一團...", "你畫了一個完美的環己烷船式構象，並為自己小小的藝術成就感到驕傲..."];
                    break;
                case '獸醫細菌學':
                    messages = ["面對吳弘毅老師的細菌大軍，你拿起了革蘭氏染色的釣竿...", "你念著那些拗口的菌名，『葡萄球菌』、『鏈球菌』...感覺自己像在念什麼神秘的咒語。", "你想像自己是個英勇的抗生素，正在屠殺一群萬惡的病原體..."];
                    changes.kp[subject] = 32;
                    break;
                case '細胞生物學':
                    messages = ["你打開鍾曜吉老師的遠距課程影片，試圖從中找出粒線體是細胞發電廠之外的考點...", "高基氏體、內質網、溶酶體...你感覺自己的腦細胞正在為了理解細胞而大量凋亡。", "你把影片調到2倍速播放，老師的聲音變得像花栗鼠一樣..."];
                    break;
                case '保育醫學概論':
                    messages = ["你翻開陳貞志老師的保育醫學講義，看到野生動物救援的段落，突然覺得『學府路飛猴』也應該被好好保育。", "『棲地破碎化』...這些巨大的名詞讓你感到沉重，但首先，你得先保育好你自己的學分。", "你讀到石虎的困境，不禁悲從中來，但你看了一眼自己的成績，發現自己的處境比石虎還要危險。"];
                    changes.stamina = -18;
                    break;
            }

            gameState.stamina += changes.stamina;
            gameState.kp[subject] += changes.kp[subject];
            
            showModal({
                title: `K書中...`,
                text: random.choice(messages),
                stats: changes,
                choices: [{ text: '瞭解了', style: 'bg-blue-500', action: triggerEndOfDaySequence }]
            });
        }

        function performWork() {
            const messages = ["為了下個月的蝦皮免運，你出賣了你的靈魂和肝臟...", "你熟練地將廚餘分類，思考著這些東西如果拿去做堆肥...", "端盤子時，你差點滑倒，展現了連體操選手都驚嘆的核心力量..."];
            const changes = { money: 400, stamina: -25 };
            gameState.money += changes.money;
            gameState.stamina += changes.stamina;
            showModal({
                title: '打工人生',
                text: random.choice(messages),
                stats: changes,
                choices: [{ text: '唉...', style: 'bg-blue-500', action: triggerEndOfDaySequence }]
            });
        }

        function performRest() {
             const messages = ["你果斷地選擇了『戰略性放棄』，像一具大體老師一樣躺在床上...", "你在宿舍的床上滾來滚去，最終滾成了一顆完美的墨西哥雞肉捲...", "你打開手機想放鬆一下，結果演算法精準地推送了『期末高效複習』的影片..."];
            const changes = { stamina: 50 };
            gameState.stamina = Math.min(gameState.maxStamina, gameState.stamina + changes.stamina);
            showModal({
                title: '充電中...',
                text: random.choice(messages),
                stats: changes,
                choices: [{ text: '爽啦！', style: 'bg-blue-500', action: triggerEndOfDaySequence }]
            });
        }
        
        function triggerEndOfDaySequence() {
            if (random.random() < 0.5) {
                handleRandomEvent();
            } else {
                finalizeDay();
            }
        }

        function finalizeDay() {
            gameState.isWaitingForEventChoice = false;
            gameState.money -= 100;
            gameState.day += 1;
            
            updateDisplay();
            checkGameOver();

            if (!gameState.isGameOver) {
                if (gameState.day > 14) {
                    endGame();
                } else {
                    processDay();
                }
            }
        }
        
        function handleRandomEvent(dayOffset = 0) {
            const availableEvents = [eventFlyingMonkey, eventHelmetTheft, eventTotoroTunnel, eventViciousDogs, eventColdShower];
            const chosenEvent = random.choice(availableEvents);
            chosenEvent(dayOffset);
        }

        const random = {
            choice: (arr) => arr[Math.floor(Math.random() * arr.length)],
            random: () => Math.random()
        };

        function eventFlyingMonkey(dayOffset) {
            const eventDay = gameState.day + dayOffset;
            gameState.history.push(`第 ${eventDay} 天：在學府路上遭遇了『飛猴』。`);
            gameState.isWaitingForEventChoice = true;

            showModal({
                title: '【突發事件】學府路飛猴！',
                text: '中午，你騎車行經學府路，目擊到了傳說中的物種——學府路飛猴。你甚至考慮要不要為此寫一份報告，投稿給陳貞志老師的『保育醫學概論』...',
                choices: [
                    { text: '用髒話進行物種交流', style: 'bg-red-500', action: () => handleEventChoice('monkey-a') },
                    { text: '保持安全距離觀察', style: 'bg-gray-500', action: () => handleEventChoice('monkey-b') }
                ]
            });
        }

        function eventHelmetTheft(dayOffset) {
            const eventDay = gameState.day + dayOffset;
            gameState.history.push(`第 ${eventDay} 天：安全帽被偷了。`);
            gameState.isWaitingForEventChoice = true;
            showModal({
                title: '【突發事件】安全帽失竊案！',
                text: '正要出門，卻發現安全帽被哪個天殺的摸走了！停車場的監視器，就跟你的愛情一樣，只是個裝飾品。',
                choices: [
                    { text: '含淚斗內安全帽店', style: 'bg-gray-500', action: () => handleEventChoice('helmet-a') },
                    { text: '繼承學長姐的意志', style: 'bg-red-600', action: () => handleEventChoice('helmet-b') }
                ]
            });
        }
        
        function eventTotoroTunnel(dayOffset) {
            const eventDay = gameState.day + dayOffset;
            const changes = { stamina: -20, money: -150, kp: { '獸醫解剖學(2)': -10 } };
            gameState.stamina += changes.stamina;
            gameState.money += changes.money;
            gameState.kp['獸醫解剖學(2)'] += changes.kp['獸醫解剖學(2)'];
            gameState.history.push(`第 ${eventDay} 天：掉進了龍貓隧道的排水溝。`);
            
            showModal({
                title: '【突發事件】龍貓隧道奇遇記',
                text: '為了節省30秒，你決定穿越傳說中的捷徑『龍貓隧道』，結果腳一滑，身體和成績單一起掉進了排水溝。',
                stats: changes,
                choices: [{ text: '太慘了...', style: 'bg-blue-500', action: finalizeDay }]
            });
        }

        function eventViciousDogs(dayOffset) {
            const eventDay = gameState.day + dayOffset;
            gameState.history.push(`第 ${eventDay} 天：被校園惡犬打劫了宵夜。`);
            gameState.isWaitingForEventChoice = true;
            showModal({
                title: '【突發事件】與惡犬的距離',
                text: '晚上，你拿著剛從達人巷買來的宵夜，被校園犬界的『F4』包圍了，牠們的眼神，比你的未來還要閃亮。',
                choices: [
                    { text: '上繳保護費(宵夜)', style: 'bg-gray-500', action: () => handleEventChoice('dogs-a') },
                    { text: '賭上性命與宵夜賽跑', style: 'bg-red-500', action: () => handleEventChoice('dogs-b') }
                ]
            });
        }

        function eventColdShower(dayOffset) {
            const eventDay = gameState.day + dayOffset;
            const changes = { stamina: -15 };
            gameState.stamina += changes.stamina;
            gameState.history.push(`第 ${eventDay} 天：被宿舍的冷水澡背叛了。`);

            showModal({
                title: '【突發事件】熱水澡的背叛',
                text: '拖著疲憊的身軀回到宿舍，想洗個熱水澡，結果水龍頭只有冰冷刺骨的水！你想起這就是人生，總是事與願違。',
                stats: changes,
                choices: [{ text: '人生好難...', style: 'bg-blue-500', action: finalizeDay }]
            });
        }
        
        function handleEventChoice(choice) {
             let changes = {}; let message = '';
             switch(choice) {
                case 'monkey-a': changes = { stamina: 10 }; message = '雖然牠可能聽不懂，但你感覺好多了。'; break;
                case 'monkey-b': changes = { stamina: -25 }; message = '你保持了安全距離，但那衝擊性的畫面在你腦中揮之不去。'; break;
                case 'helmet-a': changes = { money: -500, stamina: -20 }; message = '你用新台幣下架了這件倒楣事。'; break;
                case 'helmet-b':
                    if (random.random() < 0.6) {
                        changes = { money: -2500, stamina: -30 };
                        message = '你剛伸手，一台Gogoro無聲地滑到你身後，上面坐著你的系主任...';
                    } else { message = '你完成了屏科大的神聖交接儀式，戴上了一頂充滿故事的安全帽。';}
                    break;
                case 'dogs-a': changes = { stamina: -15, money: -80 }; message = '你看著宵夜被分食，感嘆生命中的一切終將逝去。'; break;
                case 'dogs-b':
                     if (random.random() < 0.5) {
                        changes = { stamina: -30 };
                        message = '你跑贏了狗，但跑不贏命運，宵夜還是在半路跟你說再見了。';
                    } else { message = '你發揮了腎上腺素的極限，成功帶著宵夜回到終點！';}
                    break;
             }
             gameState.stamina += changes.stamina || 0;
             gameState.money += changes.money || 0;
             showModal({title: '事件結果', text: message, stats: changes, choices: [{text: '繼續...', style:'bg-blue-500', action: finalizeDay}] });
        }
        
        function checkGameOver() {
             if (gameState.stamina <= 0 || gameState.money < 0) {
                gameState.isGameOver = true;
                const reason = gameState.stamina <= 0 ? "你爆肝過度，眼前一黑..." : "你窮到連買筆的錢都沒了...";
                showFinalScreen(false, reason);
            }
        }

        function endGame() {
            if (gameState.isGameOver) return;
            gameState.isGameOver = true;
            
            let passedCount = 0;
            for(const subject in gameState.grades) {
                const finalGrade = Math.min(100, gameState.grades[subject] + Math.floor(gameState.kp[subject] / 1.0));
                if (finalGrade >= 60) passedCount++;
            }
            const isVictory = passedCount === Object.keys(gameState.grades).length;
            showFinalScreen(isVictory, "審判的時刻來臨...");
        }

        function showFinalScreen(isVictory, message) {
            if (isVictory) {
                showCelebrationModal();
                return; 
            }
            
            let resultsHTML = '';
            for(const subject in gameState.grades) {
                const finalGrade = Math.min(100, gameState.grades[subject] + Math.floor(gameState.kp[subject] / 1.0));
                resultsHTML += `<div class="flex justify-between p-2 rounded ${finalGrade >= 60 ? 'bg-emerald-200 text-emerald-800' : 'bg-red-200 text-red-800'}"><span>${subject}</span><span class="font-bold">${finalGrade}分 [${finalGrade >= 60 ? 'PASS' : 'FAIL'}]</span></div>`;
            }

            let historyHTML = '';
            if (gameState.history.length > 0) {
                historyHTML = `<div class="text-left mt-4 border-t pt-2"><h4 class="font-bold text-gray-700">大事紀</h4><div class="text-xs text-gray-500">${gameState.history.map(h => `<p>- ${h}</p>`).join('')}</div></div>`;
            }
            
            const title = message === "審判的時刻來臨..." ? '成績單' : '掙扎失敗...';
            const failText = (message === "審判的時刻來臨..." ? '可惜...你的肝似乎還有進步空間。' : message)
            
            showModal({
                title: title,
                text: `${failText}<div class="mt-4 space-y-1">${resultsHTML}</div>${historyHTML}`,
                choices: [
                    {text: '重新開始', style: 'bg-indigo-500', action: restartGame}
                ]
            });
        }

        function restartGame() {
            const modalEl = document.querySelector('.modal-overlay');
            if (modalEl) {
                modalEl.classList.add('closing');
                setTimeout(() => modalEl.remove(), 300);
            }
            
            initializeGameState();
            updateDisplay();
            actionPanel.innerHTML = '';
            showModal({
                title: "歡迎回來...",
                text: "【獸醫大學牲再次的掙扎】！這次，你是否能改寫命運？",
                choices: [{ text: '開始掙扎', style: 'bg-red-500', action: processDay }]
            });
        }

        function showCelebrationModal() {
            const celebrationOverlay = document.createElement('div');
            celebrationOverlay.className = 'modal-overlay';
            celebrationOverlay.innerHTML = `
                <div class="modal-content tada-animation w-11/12 max-w-md p-8 rounded-2xl text-center space-y-4 !bg-white">
                    <div class="text-6xl">🎉</div>
                    <h2 class="text-3xl font-bold text-amber-500">All Pass！</h2>
                    <p class="text-lg text-gray-800">恭喜！你成功在最後一刻把學分從懸崖邊拉了回來！你的肝指數可能換來了 GPA！</p>
                    <p class="text-base text-gray-500">你可以安心放假了，直到你看到下學期的書單，然後再次開始懷疑人生...</p>
                    <div class="flex gap-4">
                        <button id="restart-btn" class="flex-1 mt-4 px-6 py-2 bg-indigo-500 text-white font-bold rounded-lg hover:bg-indigo-600">再玩一次</button>
                    </div>
                </div>
            `;
            document.body.appendChild(celebrationOverlay);
            celebrationOverlay.querySelector('#restart-btn').addEventListener('click', () => {
                document.body.removeChild(celebrationOverlay);
                restartGame();
            });
        }
        
        // ==================================
        // 7. 事件監聽
        // ==================================
        actionPanel.addEventListener('click', (e) => {
            if (e.target.tagName === 'BUTTON') {
                handleAction(e.target.dataset.action);
            }
        });

        // ==================================
        // 8. 遊戲啟動
        // ==================================
        window.onload = () => {
            initializeGameState();
            updateDisplay();
            showModal({
                title: "歡迎來到...",
                text: "【獸醫大學牲最後的掙扎】！學期末只剩14天，你的成績岌岌可危。發揮你僅存的求生本能，活下去！",
                choices: [{ text: '開始掙扎', style: 'bg-red-500', action: processDay }]
            });
        };

    </script>
</body>
</html>
